<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.skkj.mapper.TemperaturesMapper" >
  <resultMap id="BaseResultMap" type="com.example.skkj.entity.Temperature" >
    <id column="TEM_ID" property="temId"/>
    <result column="INA" property="inA" jdbcType="VARCHAR" />
    <result column="INB" property="inB" jdbcType="VARCHAR" />
    <result column="INC" property="inC" jdbcType="VARCHAR" />
    <result column="OUTA" property="outA" jdbcType="VARCHAR" />
    <result column="OUTB" property="outB" jdbcType="VARCHAR" />
    <result column="OUTC" property="outC" jdbcType="VARCHAR" />
    <result column="CONTACTA" property="contactA" jdbcType="VARCHAR" />
    <result column="CONTACTB" property="contactB" jdbcType="VARCHAR" />
    <result column="CONTACTC" property="contactC" jdbcType="VARCHAR" />
    <result column="CONTACTD" property="contactD" jdbcType="VARCHAR" />
    <result column="CONTACTE" property="contactE" jdbcType="VARCHAR" />
    <result column="CONTACTF" property="contactF" jdbcType="VARCHAR" />
	  <result column="INAXH" property="inAxh" jdbcType="VARCHAR" />
    <result column="INBXH" property="inBxh" jdbcType="VARCHAR" />
    <result column="INCXH" property="inCxh" jdbcType="VARCHAR" />
    <result column="OUTAXH" property="outAxh" jdbcType="VARCHAR" />
    <result column="OUTBXH" property="outBxh" jdbcType="VARCHAR" />
    <result column="OUTCXH" property="outCxh" jdbcType="VARCHAR" />
    <result column="CONTACTAXH" property="contactAxh" jdbcType="VARCHAR" />
    <result column="CONTACTBXH" property="contactBxh" jdbcType="VARCHAR" />
    <result column="CONTACTCXH" property="contactCxh" jdbcType="VARCHAR" />
    <result column="CONTACTDXH" property="contactDxh" jdbcType="VARCHAR" />
    <result column="CONTACTEXH" property="contactExh" jdbcType="VARCHAR" />
    <result column="CONTACTFXH" property="contactFxh" jdbcType="VARCHAR" />
    <result column="ANTSIGNAL" property="antSignal" jdbcType="VARCHAR" />
    <result column="DEVICE_NUMBER" property="deviceNumber" jdbcType="VARCHAR" />
    <result column="TIME" property="time" jdbcType="VARCHAR" />
    <result column="DEVICENUMBERXM" property="deviceNumberXm" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="NUMBER" property="number" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    TEM_ID,INA,INB,INC,OUTA,OUTB,OUTC,CONTACTA,CONTACTB,CONTACTC,CONTACTD,CONTACTE,CONTACTF,INAXH,INBXH,
    INCXH,OUTAXH,OUTBXH,OUTCXH,CONTACTAXH,CONTACTBXH,CONTACTCXH,CONTACTDXH,CONTACTEXH,CONTACTFXH,ANTSIGNAL,DEVICE_NUMBER,TIME,DEVICENUMBERXM,TYPE,NUMBER
  </sql>

  
  <delete id="deletByTime" parameterType="String">
  		delete from ${object} where  TIME &lt; #{time} AND NUMBER = #{number}
  </delete>

    <insert id ="insertList" parameterType="java.util.List" >
        insert into temperatures2018032301
        (INA,INB,INC,OUTA,OUTC,OUTB,CONTACTA,CONTACTB,CONTACTC,CONTACTD,CONTACTE,CONTACTF,
        INAXH,INBXH,INCXH,OUTAXH,OUTBXH,OUTCXH,CONTACTAXH,CONTACTBXH,CONTACTCXH,CONTACTDXH,CONTACTEXH,
        CONTACTFXH,ANTSIGNAL,DEVICE_NUMBER,TIME,TYPE,NUMBER)
        values
        <foreach collection ="list" item="temperature" index= "index" separator =",">
            (
            #{temperature.inA},
            #{temperature.inB},
            #{temperature.inC},
            #{temperature.outA},
            #{temperature.outC},
            #{temperature.outB},
            #{temperature.contactA},
            #{temperature.contactB},
            #{temperature.contactC},
            #{temperature.contactD},
            #{temperature.contactE},
            #{temperature.contactF},
            #{temperature.inAxh},
            #{temperature.inBxh},
            #{temperature.inCxh},
            #{temperature.outAxh},
            #{temperature.outBxh},
            #{temperature.outCxh},
            #{temperature.contactAxh},
            #{temperature.contactBxh},
            #{temperature.contactCxh},
            #{temperature.contactDxh},
            #{temperature.contactExh},
            #{temperature.contactFxh},
            #{temperature.antSignal},
            #{temperature.deviceNumber},
            #{temperature.time},
            #{temperature.type},
            #{temperature.number}
            )
        </foreach>
    </insert>

	<insert id="insertTemu" parameterType="com.example.skkj.entity.Temperature">
		insert into ${object}
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="inA != null and inA != ''" >
				INA,
			</if>
			<if test="inB != null and inB != ''" >
				INB,
			</if>
			<if test="inC != null and inC != ''" >
				INC,
			</if>
			<if test="outA != null and outA != ''" >
				OUTA,
			</if>
			<if test="outB != null and outB != ''" >
				OUTB,
			</if>
			<if test="outC != null and outC != ''" >
				OUTC,
			</if>
			<if test="contactA != null and contactA != ''" >
				CONTACTA,
			</if>
			<if test="contactB != null and contactB != ''" >
				CONTACTB,
			</if>
			<if test="contactC != null and contactC != ''" >
				CONTACTC,
			</if>
			<if test="contactD != null and contactD != ''" >
				CONTACTD,
			</if>
			<if test="contactE != null and contactE != ''" >
				CONTACTE,
			</if>
			<if test="contactF != null and contactF != ''" >
				CONTACTF,
			</if>
			<if test="inAxh != null and inAxh != ''" >
				INAXH,
			</if>
			<if test="inBxh != null and inBxh != ''" >
				INBXH,
			</if>
			<if test="inCxh != null and inCxh != ''" >
				INCXH,
			</if>
			<if test="outAxh != null and outAxh != ''" >
				OUTAXH,
			</if>
			<if test="outBxh != null and outBxh != ''" >
				OUTBXH,
			</if>
			<if test="outCxh != null and outCxh != ''" >
				OUTCXH,
			</if>
			<if test="contactAxh != null and contactAxh != ''" >
				CONTACTAXH,
			</if>
			<if test="contactBxh != null and contactBxh != ''" >
				CONTACTBXH,
			</if>
			<if test="contactCxh != null and contactCxh != ''" >
				CONTACTCXH,
			</if>
			<if test="contactDxh != null and contactDxh != ''" >
				CONTACTDXH,
			</if>
			<if test="contactExh != null and contactExh != ''" >
				CONTACTEXH,
			</if>
			<if test="contactFxh != null and contactFxh != ''" >
				CONTACTFXH,
			</if>
			<if test="antSignal != null and antSignal != ''" >
				ANTSIGNAL,
			</if>
			<if test="deviceNumber != null and deviceNumber != ''" >
				DEVICE_NUMBER,
			</if>
			<if test="time != null and time != ''" >
				TIME,
			</if>
			<if test="deviceNumberXm != null and deviceNumberXm != ''" >
				DEVICENUMBERXM,
			</if>
			<if test="type != null and type != ''" >
				TYPE,
			</if>
			<if test="number != null and number != ''" >
				NUMBER,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="inA != null and inA != ''" >
				#{inA,jdbcType=VARCHAR},
			</if>
			<if test="inB != null and inB != ''" >
				#{inB,jdbcType=VARCHAR},
			</if>
			<if test="inC != null and inC != ''" >
				#{inC,jdbcType=VARCHAR},
			</if>
			<if test="outA != null and outA != ''" >
				#{outA,jdbcType=VARCHAR},
			</if>
			<if test="outB != null and outB != ''" >
				#{outB,jdbcType=VARCHAR},
			</if>
			<if test="outC != null and outC != ''" >
				#{outC,jdbcType=VARCHAR},
			</if>
			<if test="contactA != null and contactA != ''" >
				#{contactA,jdbcType=VARCHAR},
			</if>
			<if test="contactB != null and contactB != ''" >
				#{contactB,jdbcType=VARCHAR},
			</if>
			<if test="contactC != null and contactC != ''" >
				#{contactC,jdbcType=VARCHAR},
			</if>
			<if test="contactD != null and contactD != ''" >
				#{contactD,jdbcType=VARCHAR},
			</if>
			<if test="contactE != null and contactE != ''" >
				#{contactE,jdbcType=VARCHAR},
			</if>
			<if test="contactF != null and contactF != ''" >
				#{contactF,jdbcType=VARCHAR},
			</if>
			<if test="inAxh != null and inAxh != ''" >
				#{inAxh,jdbcType=VARCHAR},
			</if>
			<if test="inBxh != null and inBxh != ''" >
				#{inBxh,jdbcType=VARCHAR},
			</if>
			<if test="inCxh != null and inCxh != ''" >
				#{inCxh,jdbcType=VARCHAR},
			</if>
			<if test="outAxh != null and outAxh != ''" >
				#{outAxh,jdbcType=VARCHAR},
			</if>
			<if test="outBxh != null and outBxh != ''" >
				#{outBxh,jdbcType=VARCHAR},
			</if>
			<if test="outCxh != null and outCxh != ''" >
				#{outCxh,jdbcType=VARCHAR},
			</if>
			<if test="contactAxh != null and contactAxh != ''" >
				#{contactAxh,jdbcType=VARCHAR},
			</if>
			<if test="contactBxh != null and contactBxh != ''" >
				#{contactBxh,jdbcType=VARCHAR},
			</if>
			<if test="contactCxh != null and contactCxh != ''" >
				#{contactCxh,jdbcType=VARCHAR},
			</if>
			<if test="contactDxh != null and contactDxh != ''" >
				#{contactDxh,jdbcType=VARCHAR},
			</if>
			<if test="contactExh != null and contactExh != ''" >
				#{contactExh,jdbcType=VARCHAR},
			</if>
			<if test="contactFxh != null and contactFxh != ''" >
				#{contactFxh,jdbcType=VARCHAR},
			</if>
			<if test="antSignal != null and antSignal != ''" >
				#{antSignal,jdbcType=VARCHAR},
			</if>
			<if test="deviceNumber != null and deviceNumber != ''" >
				#{deviceNumber,jdbcType=VARCHAR},
			</if>
			<if test="time != null and time != ''" >
				#{time,jdbcType=VARCHAR},
			</if>
			<if test="deviceNumberXm != null and deviceNumberXm != ''" >
				#{deviceNumberXm,jdbcType=VARCHAR},
			</if>
			<if test="type != null and type != ''" >
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="number != null and number != ''" >
				#{number,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

    
    <select id="selectByDinshisTime" parameterType="String" resultMap="BaseResultMap">
    	select
    	   <include refid="Base_Column_List"/>
    	from ${object} where TIME &lt; #{time} AND NUMBER = #{number}
    </select>

	<select id="selectByNumber" parameterType="String" resultMap="BaseResultMap">
    	select
    	   <include refid="Base_Column_List"/>
    	from ${object} where NUMBER = #{number}
    </select>

	<select id="selectBySE" parameterType="map" resultMap="BaseResultMap">
    	select
    	   <include refid="Base_Column_List"/>
    	from ${object} where NUMBER = #{number} and DEVICE_NUMBER = #{deviceNumber} AND
		<![CDATA[
            TIME >= #{startTime} AND TIME <= #{endTime}
          ]]>
		GROUP BY TIME ASC
    </select>

    <select id="selectCount" resultType="int" parameterType="map">
        select
        COUNT(1)
        from ${object}
    </select>
	<select id="selectCountSj" resultMap="BaseResultMap" parameterType="map">
        select
		<include refid="Base_Column_List"/>
        from ${object}
    </select>

	<update id="ImportByTempe" parameterType="java.util.List">
		<foreach collection ="list" item="item" index= "index" open="" close="" separator=";">
			update ${item.object}
			<set>
				<if test="item.inA != null and item.inA != ''" >
					INA=#{item.inA},
				</if>
				<if test="item.inB != null and item.inB != ''" >
					INB=#{item.inB},
				</if>
				<if test="item.inC != null and item.inC != ''" >
					INC=#{item.inC},
				</if>
				<if test="item.outA != null and item.outA != ''" >
					OUTA=#{item.outA},
				</if>
				<if test="item.outB != null and item.outB != ''" >
					OUTB=#{item.outB},
				</if>
				<if test="item.outC != null and item.outC != ''" >
					OUTC=#{item.outC},
				</if>
				<if test="item.inAxh != null and item.inAxh != ''" >
					INAXH=#{item.inAxh},
				</if>
				<if test="item.inBxh != null and item.inBxh != ''" >
					INBXH=#{item.inBxh},
				</if>
				<if test="item.inCxh != null and item.inCxh != ''" >
					INCXH=#{item.inCxh},
				</if>
				<if test="item.outAxh != null and item.outAxh != ''" >
					OUTAXH=#{item.outAxh},
				</if>
				<if test="item.outBxh != null and item.outBxh != ''" >
					OUTBXH=#{item.outBxh},
				</if>
				<if test="item.outCxh != null and item.outCxh != ''" >
					OUTCXH=#{item.outCxh},
				</if>
				<if test="item.contactA != null and item.contactA != ''" >
					CONTACTA=#{item.contactA},
				</if>
				<if test="item.contactB != null and item.contactB != ''" >
					CONTACTB=#{item.contactB},
				</if>
				<if test="item.contactC != null and item.contactC != ''" >
					CONTACTC=#{item.contactC},
				</if>
				<if test="item.contactD != null and item.contactD != ''" >
					CONTACTD=#{item.contactD},
				</if>
				<if test="item.contactE != null and item.contactE != ''" >
					CONTACTE=#{item.contactE},
				</if>
				<if test="item.contactF != null and item.contactF != ''" >
					CONTACTF=#{item.contactF},
				</if>
				<if test="item.contactAxh != null and item.contactAxh != ''" >
					CONTACTAXH=#{item.contactAxh},
				</if>
				<if test="item.contactBxh != null and item.contactBxh != ''" >
					CONTACTBXH=#{item.contactBxh},
				</if>
				<if test="item.contactCxh != null and item.contactCxh != ''" >
					CONTACTCXH=#{item.contactCxh},
				</if>
				<if test="item.contactDxh != null and item.contactDxh != ''" >
					CONTACTDXH=#{item.contactDxh},
				</if>
				<if test="item.contactExh != null and item.contactExh != ''" >
					CONTACTEXH=#{item.contactExh},
				</if>
				<if test="item.contactFxh != null and item.contactFxh != ''" >
					CONTACTFXH=#{item.contactFxh},
				</if>
				<if test="item.antSignal != null and item.antSignal != ''" >
					ANTSIGNAL=#{item.antSignal},
				</if>
				<if test="item.type != null and item.type != ''" >
					TYPE=#{item.type}
				</if>

			</set>
			where DEVICE_NUMBER = #{item.deviceNumber} AND TIME = #{item.time}
		</foreach>
	</update>

</mapper>